image: node:13-buster-slim

stages:
    - test
    - build
    - publish

coverage:
    stage: test
    tags:
        - docker-executor
    script:
        - ./scripts/run-tests.sh
    artifacts:
        paths:
            - coverage

build:
    stage: test
    script:
        - apt-get update && apt-get install -y rpm git
        - cd iappslx && npm ci && npm run build
    artifacts:
        expire_in: 1 week
        name: f5-appsvcs-templates.$CI_BUILD_REF
        paths:
            - iappslx/dist/*

create_docs:
  image: ${CONTAINTHEDOCS_IMAGE}
  stage: build
  allow_failure: true
  script:
    - cd docs
    - pip install -r requirements.txt
    - if [ "$CI_COMMIT_REF_NAME" = "docs-staging" ] || [ "$CI_COMMIT_REF_NAME" = "docs-latest" ]; then
    -   rm -rf docs/_templates
    - fi
    - make html
    - make test
  tags:
    - cm-official-docker-executor
  artifacts:
    expire_in: 1 week
    name: sphinx-docs_$CI_BUILD_REF
    paths:
      - docs/_build/html

pages:
    stage: publish
    environment:
        name: staging
        url: https://${CI_PROJECT_NAMESPACE}.${PAGES_DOMAIN}/${CI_PROJECT_NAME}/
    tags:
        - cm-official-docker-executor
    dependencies:
        - coverage
        - create_docs
    script:
       - PUBLIC_DIR='./public'
       - PUBLIC_DOCS=${PUBLIC_DIR}/public-docs
       - COVERAGE_DOCS=${PUBLIC_DIR}/coverage-docs
       - mkdir -p ${COVERAGE_DOCS}
       - mkdir -p ${PUBLIC_DIR}
       - mkdir -p ${PUBLIC_DOCS}
       - cp docs/index.html ${PUBLIC_DIR}/index.html
       - cp -R docs/_build/html/* ${PUBLIC_DOCS}
       - cp -R coverage/* ${COVERAGE_DOCS}
    artifacts:
        paths:
            - public
    only:
        - develop

clouddocs:
  image: ${CONTAINTHEDOCS_IMAGE}
  stage: publish
  tags:
    - cm-official-docker-executor
  only:
    - docs-staging@automation-toolchain/mystique
    - docs-latest@automation-toolchain/mystique
  dependencies:
    - create_docs
  script:
    - apk add --update --no-cache jq
    - scripts/publish-clouddocs.sh iappslx/package.json

artifactory:
    stage: publish
    only:
        variables:
            - $CI_COMMIT_TAG =~ /v[0-9]+\.[0-9]+\.[0-9]+/
    tags:
        - cm-official-docker-executor
    dependencies:
        - build
    script:
        - apt-get update && apt-get install -y jq curl
        - ./scripts/publish-artifactory.sh iappslx/package.json
