{{!
  ** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION **
  This template is an example of how one might build a simple HTTP application with load balancing.
  It allows the user to provide a virtual IP address and port along with a list of HTTP server addresses.
  The user-supplied values are inserted when the template is rendered, yielding an AS3 declaration
  suitable for submission to BIG-IP.
}}
{
  "class": "ADC",
  "schemaVersion": "3.0.0",
  "{{tenant_name}}": {
    "class": "Tenant",
    "{{application_name}}": {
      "class": "Application",
      "template": "http",
      "serviceMain": {
        "class": "Service_HTTP",
        "virtualPort": {{virtual_port::integer}},
        "virtualAddresses": ["{{virtual_address}}"],
        "pool": "{{application_name}}_web_pool"
      },
      "{{application_name}}_web_pool": {
        "class": "Pool",
        "monitors": [
          "http"
        ],
        "members": [
          {
            "servicePort": {{server_port::integer}},
            "serverAddresses": {{server_addresses::array}}
          }
        ]
      }
    }
  }
}




grep "blue pool" /var/log/bgTest_0.1 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.2 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.3 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.4 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.5 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.6 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.7 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.8 | grep ">: 0.[0-0]" | wc -l
grep "blue pool" /var/log/bgTest_0.9 | grep ">: 0.[0-0]" | wc -l

grep "green pool" /var/log/bgTest_0.1 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.2 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.3 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.4 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.5 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.6 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.7 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.8 | grep ">: 0.[1-9]" | wc -l
grep "green pool" /var/log/bgTest_0.9 | grep ">: 0.[1-9]" | wc -l


grep "blue pool" /var/log/bgTest_0.15 | grep -P ">: 0.([0-0]|(1[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.25 | grep -P ">: 0.([0-1]|(2[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.35 | grep -P ">: 0.([0-2]|(3[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.45 | grep -P ">: 0.([0-3]|(4[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.55 | grep -P ">: 0.([0-4]|(5[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.65 | grep -P ">: 0.([0-5]|(6[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.75 | grep -P ">: 0.([0-6]|(7[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.85 | grep -P ">: 0.([0-7]|(8[0-4]))" | wc -l
grep "blue pool" /var/log/bgTest_0.95 | grep -P ">: 0.([0-8]|(9[0-4]))" | wc -l
 
grep "green pool" /var/log/bgTest_0.15 | grep 
grep "green pool" /var/log/bgTest_0.25 | grep 
grep "green pool" /var/log/bgTest_0.35 | grep 
grep "green pool" /var/log/bgTest_0.45 | grep 
grep "green pool" /var/log/bgTest_0.55 | grep 
grep "green pool" /var/log/bgTest_0.65 | grep 
grep "green pool" /var/log/bgTest_0.75 | grep 
grep "green pool" /var/log/bgTest_0.85 | grep  -P ">: 0.([9-9]|(8[5-9]))" | wc -l
grep "green pool" /var/log/bgTest_0.95 | grep  -P ">: 0.9[5-9]" | wc -l



  echo "Green requests, \$rand < ${hiLimit}0: `grep "green pool" /var/log/gtm | grep ">: 0.[0-$loLimit]" | wc -l`" >> /root/bgTest_output;
  echo "Blue requests, \$rand > ${loLimit}0: `grep "blue pool" /var/log/gtm | grep ">: 0.[$hiLimit-9]" | wc -l`" >> /root/bgTest_output;
  echo "    Green requests, \$rand > ${loLimit}0: `grep "green pool" /var/log/gtm | grep ">: 0.[$hiLimit-9]" | wc -l`" >> /root/bgTest_output;
  echo ""

  # "rotate" logs
  echo "" >> "/var/log/bgTest_0.$hiLimit"
  echo `date +'%D %H:%M:%S'`"" >> "/var/log/bgTest_0.$hiLimit"
  cat /var/log/gtm >> "/var/log/bgTest_0.$hiLimit";
  echo "" > /var/log/gtm



  # update the datagroup'd distribution percentage:
  tmsh modify ltm data-group internal /mys/bg/bluegreen_datagroup records modify { distribution { data "0.${hiLimit}5" } }

  # run benchmark test to generate logs
  ab -n 100 "http://$vsIp/"


  # read logs to calculate percentages
  echo "" >> /root/bgTest_output;1
  echo "    Total Records w/0.${hiLimit}5: `grep CLIENT_ACCEPTED /var/log/gtm | wc -l`" >> /root/bgTest_output;
  echo "    Blue requests, \$rand < ${hiLimit}5: `grep "blue pool" /var/log/gtm | grep -P ">: 0.([0-$loLimit]|($hiLimit[0-4]))" | wc -l`" >> /root/bgTest_output;
  echo "Green requests, \$rand < ${hiLimit}5: `grep "green pool" /var/log/gtm | grep -P ">: 0.([0-$loLimit]|($hiLimit[0-4]))" | wc -l`" >> /root/bgTest_output;
  if [ $hiLimit -eq 9 ]; then
    echo "Blue requests, \$rand > ${hiLimit}5: `grep "blue pool" /var/log/gtm | grep -P ">: 0.9[5-9]" | wc -l`" >> /root/bgTest_output;
    echo "    Green requests, \$rand >= ${hiLimit}5: `grep "green pool" /var/log/gtm | grep -P ">: 0.9[5-9]" | wc -l`" >> /root/bgTest_output;
  else
    echo "Blue requests, \$rand >= ${hiLimit}5: `grep "blue pool" /var/log/gtm | grep -P ">: 0.([$(($hiLimit+1))-9]|($hiLimit[5-9]))" | wc -l`" >> /root/bgTest_output;
    echo "    Green requests, \$rand >= ${hiLimit}5: `grep "green pool" /var/log/gtm | grep -P ">: 0.([$(($hiLimit+1))-9]|($hiLimit[5-9]))" | wc -l`" >> /root/bgTest_output;