# Simple UDP template with option to select or specify multiple addresses.
# ** At least one IPAM provider must be specified in settings**
title: Simple UDP Application with IPAM (Multiple Addresses)
description: "** FOR DEMONSTRATION PURPOSES--NOT INTENDED FOR USE IN PRODUCTION **  This template is an example of how one might build a simple UDP application with load balancing and listening on multiple IPAM addresses.  It allows the user to provide a list of IPAM server addresses and a port to listen on, along with a list of UDP server addresses to load balance to.  The user-supplied values are inserted when the template is rendered, yielding an AS3 declaration suitable for submission to BIG-IP."
definitions:
  virtual_addresses_arr:
    title: Virtual Addresses
    type: array
    items:
      oneOf:
        - title: Select IPAM Provider...
          description: One or more IPAM providers must be configured using the Settings tab.
          ipFromIpam: true
          type: string
          not:
            oneOf:
              - format: ipv4
              - format: ipv6
        - title: Manually enter address...
          type: string
          oneOf:
            - format: ipv4
            - format: ipv6
parameters:
  tenant_name: ipam_multi
  application_name: ipam_multi_app
  virtual_port: 5555
  server_addresses:
    - 192.0.3.3
  service_port: 5555
template: |
  {
    "class": "ADC",
    "schemaVersion": "3.0.0",
    "{{tenant_name}}": {
      "class": "Tenant",
      "{{application_name}}": {
        "class": "Application",
        "template": "udp",
        "serviceMain": {
          "class": "Service_UDP",
          "virtualAddresses": {{virtual_addresses_arr}},
          "virtualPort": {{virtual_port:types:port}},
          "pool": "{{application_name}}_Pool1"
        },
        "{{application_name}}_Pool1": {
          "class": "Pool",
          "monitors": [
            "icmp"
          ],
          "members": [
            {
              "serverAddresses": {{server_addresses::array}},
              "servicePort": {{service_port:types:port}}
            }
          ]
        }
      }
    }
  }
