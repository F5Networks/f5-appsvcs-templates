contentType: application/json
definitions:
  tenant_name:
    title: What is the tenant name?
    description: The tenant is the high-level grouping in an AS3 declaration. FAST deploys all configuration for a given tenant in a BIG-IP partition of the same name.
  app_name:
    title: What is the application name?
    description: The application is the low-level grouping in an AS3 declaration. FAST deploys all configuration for a given application in a BIG-IP folder within the tenant partition.
  virtual_address:
    title: What IP address do you want to use for the virtual server?
    description: This IP address, combined with the port you specify below, becomes the BIG-IP virtual server address and port, which clients use to access the application. The system uses this IP:Port for distributing requests to the web servers.
  virtual_port:
    title: What TCP port do you want to use for the virtual server?
  enable_pool:
    title: Create Pool
    description: A pool is a logical set of devices, such as web servers, that you group together to receive and process traffic.
    type: boolean
  make_pool:
    title: Automatically manage the pool
    description: A load balancing pool is a logical set of devices, such as web servers, grouped together to receive and process traffic. When clients attempt to access the application via the BIG-IP virtual server, the BIG-IP system distributes requests to any of the servers that are members of that pool.
    type: boolean
  pool_name:
    title: Specify the name of an existing BIG-IP pool.
    enumFromBigip: 'ltm/pool'
  pool_members:
    title: Server Addresses
    description: Add the IP addresses of a pool member.
  pool_port:
    title: What TCP port do you want to use for the pool members?
  load_balancing_mode:
    title: Which load balancing method do you want to use?
    description: A load balancing method is an algorithm that the BIG-IP system uses to select a pool member for processing a request. F5 recommends the Least Connections load balancing method, where new connections are routed to the node that has the least number of current connections. This is ideal for environments in which pool members have similar performance and capacity capabilities.
  slow_ramp_time:
    title: What slow ramp time do you want to use? (recommended value is 300 seconds)
    description:  Slowly increases the number of connection requests that are load balanced to a new pool member.
  enable_monitor:
    title: Pool Monitor
    description: Determine the availability and performance of devices, links, and services on a network.
    type: boolean
  make_monitor:
    title: Automatically manage the pool monitor
    type: boolean
  monitor_name:
    title: Specify the name of an existing BIG-IP monitor.
    description: Monitors are used to determine the health of the application on each web server. If an application instance does not respond or responds incorrectly, the system will cease to send client requests to that web server. The system will continue to monitor the instance and will begin sending requests once the application responds correctly.
    enumFromBigip: 'ltm/monitor/tcp'
  enable_snat:
    title: SNAT
    description: Secure Network Address Translation maps the source client IP address in a request to a translation address defined on the BIG-IP device.
    type: boolean
  snat_automap:
    title: SNAT Automap
    description: SNAT automap uses BIG-IP self IP addresses as the translation address.
    type: boolean
  make_snatpool:
    title: Automatically manage the SNAT pool.
    type: boolean
  snatpool_name:
    title: Specify the name of an existing BIG-IP SNAT pool.
    enumFromBigip: 'ltm/snatpool'
  snat_addresses:
    title: SNAT Pool Addresses
  enable_persistence:
    title: Persistence
    description: Ensures that client requests are directed to the same pool member throughout the life of a session or during subsequent sessions.
    type: boolean
  persistence_type:
    title: Specify the type of persistence.
  enable_fallback_persistence:
    title: Fallback Persistence
    description: Create a secondary, or fallback, persistence record for each new client connection.
    type: boolean
  fallback_persistence_type:
    title: Specify the type of fallback persistence.
  common_tcp_profile:
    title: Use the same TCP profile for ingress and egress traffic.
    type: boolean
  make_tcp_profile:
    title: Automatically manage the TCP profile.
    type: boolean
  tcp_topology:
    title: Specify the type of network that connects both clients and servers to the BIG-IP system.
  tcp_profile_name:
    title: Specify the name of an existing BIG-IP TCP profile.
    enumFromBigip: 'ltm/profile/tcp'
  make_tcp_ingress_profile:
    title: Automatically manage the ingress TCP profile
    type: boolean
  tcp_ingress_topology:
    title: Specify the type of network that connects clients to the BIG-IP system
  tcp_ingress_profile_name:
    title: Specify the name of an existing BIG-IP TCP profile for client-side context.
    enumFromBigip: 'ltm/profile/tcp'
  make_tcp_egress_profile:
    title: Automatically manage the egress TCP profile
    type: boolean
  tcp_egress_topology:
    title: Specify the type of network that connects servers to the BIG-IP system
  tcp_egress_profile_name:
    title: Specify the name of an existing BIG-IP TCP profile for server-side context.
    enumFromBigip: 'ltm/profile/tcp'
  app_pool_def:
    template: |
      {{#enable_pool}}
        {{#make_pool}}
          "{{app_name:f5:bigip_name}}_pool": {
            "class": "Pool",
            "members": [{
              "serverAddresses": {{pool_members:f5:ipv4_array}},
              "servicePort": {{pool_port:f5:port}},
              "shareNodes": true
            }],
            "loadBalancingMode": "{{load_balancing_mode:f5:load_balancing_mode}}",
            "slowRampTime": {{slow_ramp_time::integer}},
            {{#enable_monitor}}
              {{#make_monitor}}
                "monitors": [ "tcp" ]
              {{/make_monitor}}
              {{^make_monitor}}
                "monitors": [{
                  "bigip": "{{monitor_name:f5:bigip_path}}"
                }]
              {{/make_monitor}}
            {{/enable_monitor}}
          },
        {{/make_pool}}
      {{/enable_pool}}
  app_snatpool_def:
    template: |
      {{#enable_snat}}
        {{^snat_automap}}
          {{#make_snatpool}}
            "{{app_name:f5:bigip_name}}_snatpool": {
              "class": "SNAT_Pool",
              "snatAddresses": {{snat_addresses:f5:ipv4_array}}
            },
          {{/make_snatpool}}
        {{/snat_automap}}
      {{/enable_snat}}
  service_pool_def:
    template: |
      {{#enable_pool}}
        {{#make_pool}}
          "pool": "{{app_name:f5:bigip_name}}_pool",
        {{/make_pool}}
        {{^make_pool}}
          "pool": {
            "bigip": "{{pool_name::string}}"
          },
        {{/make_pool}}
      {{/enable_pool}}
  service_snat_def:
    template: |
      {{#enable_snat}}
        {{#snat_automap}}
          "snat": "auto",
        {{/snat_automap}}
        {{^snat_automap}}
          {{#make_snatpool}}
            "snat": {
              "use": "{{app_name:f5:bigip_name}}_snatpool"
            },
          {{/make_snatpool}}
          {{^make_snatpool}}
            "snat": {
              "bigip": "{{snatpool_name::string}}"
            },
          {{/make_snatpool}}
        {{/snat_automap}}
      {{/enable_snat}}
  service_persistence:
    template: |
      {{#enable_persistence}}
        "persistenceMethods": ["{{persistence_type:f5:persistence}}"],
        {{#enable_fallback_persistence}}
          "fallbackPersistenceMethod": "{{fallback_persistence_type:f5:persistence}}",
        {{/enable_fallback_persistence}}
      {{/enable_persistence}}
  service_tcp_def:
    template: |
      {{#common_tcp_profile}}
        {{#make_tcp_profile}}
          "profileTCP": "{{tcp_topology:f5:topology}}"
        {{/make_tcp_profile}}
        {{^make_tcp_profile}}
          "profileTCP": {
            "bigip": "{{tcp_profile_name:f5:bigip_path}}"
           }
        {{/make_tcp_profile}}
      {{/common_tcp_profile}}
      {{^common_tcp_profile}}
      "profileTCP": {
          {{#make_tcp_ingress_profile}}
            "ingress": "{{tcp_ingress_topology:f5:topology}}",
          {{/make_tcp_ingress_profile}}
          {{^make_tcp_ingress_profile}}
            "ingress": {
              "bigip": "{{tcp_ingress_profile_name:f5:bigip_path}}"
            },
          {{/make_tcp_ingress_profile}}
          {{#make_tcp_egress_profile}}
            "egress": "{{tcp_egress_topology:f5:topology}}"
          {{/make_tcp_egress_profile}}
          {{^make_tcp_egress_profile}}
            "egress": {
              "bigip": "{{tcp_egress_profile_name:f5:bigip_path}}"
            }
          {{/make_tcp_egress_profile}}
       }
      {{/common_tcp_profile}}
parameters:
  virtual_port: 443
  enable_pool: true
  make_pool: true
  pool_port: 80
  slow_ramp_time: 300
  enable_monitor: true
  make_monitor: true
  monitor_name: /Common/tcp
  enable_snat: true
  snat_automap: true
  make_snatpool: true
  enable_persistence: true
  persistence_type: source-address
  enable_fallback_persistence: false
  fallback_persistence_type: source-address
  common_tcp_profile: false
  make_tcp_profile: true
  tcp_topology: lan
  tcp_profile_name: /Common/f5-tcp-progressive
  make_tcp_ingress_profile: true
  tcp_ingress_topology: wan
  tcp_ingress_profile_name: /Common/f5-tcp-progressive
  make_tcp_egress_profile: true
  tcp_egress_topology: lan
  tcp_egress_profile_name: /Common/f5-tcp-progressive
template: |
  {
    "class": "ADC",
    "schemaVersion": "3.0.0",
    "id": "urn:uuid:a858e55e-bbe6-42ce-a9b9-0f4ab33e3bf7",
    "{{tenant_name:f5:bigip_name}}": {
      "class": "Tenant",
      "{{app_name:f5:bigip_name}}": {
        "class": "Application",
        "template": "tcp",
        {{> app_pool_def}}
        {{> app_snatpool_def}}
        "serviceMain": {
          "class": "Service_TCP",
          "virtualAddresses": ["{{virtual_address:f5:ipv4}}"],
          "virtualPort": {{virtual_port:f5:port}},
          {{> service_pool_def}}
          {{> service_snat_def}}
          {{> service_persistence}}
          {{> service_tcp_def}}
        }
      }
    }
  }
