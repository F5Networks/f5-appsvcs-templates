{
  "$schema": "http://json-schema.org/draft-07/hyper-schema",
  "definitions": {
    "bigip_name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$"
    },
    "bigip_path": {
      "type": "string",
      "minLength": 1,
      "pattern": "^\\x2f[^\\x00-\\x19\\x22#'*<>?\\x5b-\\x5d\\x7b-\\x7d\\x7f]+$",
      "maxLength": 255
    },
    "ipv4": {
      "type": "string",
      "format": "ipv4",
      "default": "10.0.0.1"
    },
    "ipv4_array": {
      "type": "array",
      "uniqueItems": true,
      "default": [],
      "items": {
        "$ref": "#/definitions/ipv4"
      }
    },
    "ipv4_ipv6": {
      "oneOf": [
        {
          "type": "string",
          "format": "ipv4"
        },
        {
          "type": "string",
          "format": "ipv6"
        }
      ],
      "default": "10.1.1.1"
    },
    "port": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "persistence": {
      "type": "string",
      "enum": [
        "cookie",
        "destination-address",
        "msrdp",
        "source-address",
        "tls-session-id"
      ]
    },
    "topology": {
      "type": "string",
      "enum": [
        "lan",
        "wan",
        "mobile"
      ]
    },
    "tenant_name": {
      "title": "Specify the tenant name.",
      "description": "The *tenant* is the high-level grouping in an AS3 declaration. FAST deploys all configuration for a given tenant in a BIG-IP partition of the same name.",
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$"
    },
    "app_name": {
      "title": "Specify the application name.",
      "description": "The *application* is the low-level grouping in an AS3 declaration. FAST deploys all configuration for a given application in a BIG-IP folder within the tenant partition.",
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$"
    },
    "virtual_address": {
      "title": "Specify the IP address for the virtual server.",
      "description": "This IP address, combined with the port you specify below, becomes the BIG-IP virtual server address and port, which clients use to access the application. The system uses this IP:Port for distributing requests to the web servers.",
      "$ref": "#/definitions/ipv4_ipv6"
    },
    "virtual_port": {
      "title": "Specify the TCP port for the virtual server.",
      "$ref": "#/definitions/port",
      "default": 443
    },
    "enable_redirect": {
      "title": "Redirect port 80 traffic to this virtual server",
      "type": "boolean",
      "default": true
    },
    "enable_pool": {
      "title": "Create Pool",
      "description": "A *pool* is a logical set of devices, such as web servers, that you group together to receive and process traffic.",
      "type": "boolean",
      "default": true
    },
    "make_pool": {
      "title": "Automatically manage the pool",
      "type": "boolean",
      "default": true
    },
    "pool_name": {
      "title": "Specify the name of an existing BIG-IP pool.",
      "type": "string",
      "enumFromBigip": "ltm/pool",
      "default": ""
    },
    "load_balancing_mode": {
      "title": "Specify the load balancing method.",
      "description": "A *load balancing method* is an algorithm that the BIG-IP system uses to select a pool member for processing a request. F5 recommends the Least Connections load balancing method, where new connections are routed to the node that has the least number of current connections. This is ideal for environments in which pool members have similar performance and capacity capabilities.",
      "type": "string",
      "default": "least-connections-member",
      "enum": [
        "dynamic-ratio-member",
        "dynamic-ratio-node",
        "fastest-app-response",
        "fastest-node",
        "least-connections-member",
        "least-connections-node",
        "least-sessions",
        "observed-member",
        "observed-node",
        "predictive-member",
        "predictive-node",
        "ratio-least-connections-member",
        "ratio-least-connections-node",
        "ratio-member",
        "ratio-node",
        "ratio-session",
        "round-robin",
        "weighted-least-connections-member",
        "weighted-least-connections-node"
      ]
    },
    "slow_ramp_time": {
      "title": "Specify the slow ramp time. (recommended value is 300 seconds)",
      "description": "Slowly increases the number of connection requests that are load balanced to a new pool member.",
      "type": "integer",
      "minimum": 0,
      "maximum": 65535,
      "default": 300
    },
    "enable_monitor": {
      "title": "Pool Monitor",
      "description": "Determine the availability and performance of devices, links, and services on a network.",
      "type": "boolean",
      "default": true
    },
    "make_monitor": {
      "title": "Automatically manage the pool monitor.",
      "type": "boolean",
      "default": true
    },
    "monitor_name": {
      "title": "Specify the name of an existing BIG-IP monitor.",
      "description": "Monitors are used to determine the health of the application on each server. If an application instance does not respond or responds incorrectly, the system will cease to send client requests to that web server. The system will continue to monitor the instance and will begin sending requests once the application responds correctly.",
      "type": "string",
      "default": ""
    },
    "monitor_interval": {
      "title": "Specify the number of seconds between monitor polls.",
      "type": "integer",
      "maximum": 60,
      "default": 30
    },
    "monitor_username": {
      "title": "Specify the user account to use for health checks.",
      "type": "string",
      "default": ""
    },
    "monitor_passphrase": {
      "title": "Specify the password to use with the user account for health checks.",
      "type": "string",
      "format": "password",
      "contentEncoding": "base64",
      "default": ""
    },
    "enable_snat": {
      "title": "SNAT",
      "description": "*Secure Network Address Translation* maps the source client IP address in a request to a translation address defined on the BIG-IP device.",
      "type": "boolean",
      "default": true
    },
    "snat_automap": {
      "title": "SNAT Automap",
      "description": "SNAT automap uses BIG-IP self-IP addresses as the translation address.",
      "type": "boolean",
      "default": true
    },
    "make_snatpool": {
      "title": "Automatically manage the SNAT pool.",
      "type": "boolean",
      "default": true
    },
    "snatpool_name": {
      "title": "Specify the name of an existing BIG-IP SNAT pool.",
      "type": "string",
      "enumFromBigip": "ltm/snatpool",
      "default": ""
    },
    "snat_addresses": {
      "title": "SNAT Pool Addresses",
      "type": "array",
      "uniqueItems": true,
      "default": [],
      "items": {
        "$ref": "#/definitions/ipv4_ipv6"
      }
    },
    "enable_persistence": {
      "title": "Persistence",
      "description": "Ensures that client requests are directed to the same pool member throughout the life of a session or during subsequent sessions.",
      "type": "boolean",
      "default": true
    },
    "persistence_type": {
      "title": "Specify the type of persistence.",
      "$ref": "#/definitions/persistence",
      "default": "cookie"
    },
    "enable_fallback_persistence": {
      "title": "Fallback Persistence",
      "description": "Create a secondary, or fallback, persistence record for each new client connection.",
      "type": "boolean",
      "default": true
    },
    "fallback_persistence_type": {
      "title": "Specify the type of fallback persistence.",
      "$ref": "#/definitions/persistence",
      "default": "source-address"
    },
    "enable_tls_server": {
      "title": "TLS Server",
      "description": "Enable TLS server to decrypt client-side connections.",
      "type": "boolean",
      "default": true
    },
    "make_tls_server_profile": {
      "title": "Automatically manage the TLS server profile",
      "type": "boolean",
      "default": true
    },
    "tls_server_profile_name": {
      "title": "Specify the name of an existing BIG-IP clientssl profile.",
      "description": "TLS server profiles are of type \"ltm clientssl\" on BIG-IP.",
      "enumFromBigip": "ltm/profile/client-ssl",
      "default": "/Common/clientssl"
    },
    "tls_cert_name": {
      "title": "Specify the name of an existing BIG-IP SSL certificate.",
      "enumFromBigip": "sys/crypto/cert",
      "default": "/Common/default.crt"
    },
    "tls_key_name": {
      "title": "Specify the name of an existing BIG-IP SSL key.",
      "enumFromBigip": "sys/crypto/key",
      "default": "/Common/default.key"
    },
    "enable_tls_client": {
      "title": "TLS Client",
      "description": "Enable TLS client to encrypt server-side connections.",
      "type": "boolean",
      "default": false
    },
    "make_tls_client_profile": {
      "title": "Automatically manage the TLS client profile",
      "type": "boolean",
      "default": true
    },
    "tls_client_profile_name": {
      "title": "Specify the name of an existing BIG-IP serverssl profile.",
      "description": "TLS client profiles are of type \"ltm serverssl\" on BIG-IP.",
      "enumFromBigip": "ltm/profile/server-ssl",
      "default": "/Common/serverssl"
    },
    "make_http_profile": {
      "title": "Automatically manage the HTTP profile",
      "type": "boolean",
      "default": true
    },
    "http_profile_name": {
      "title": "Specify the name of an existing BIG-IP HTTP profile.",
      "enumFromBigip": "ltm/profile/http",
      "default": "/Common/http"
    },
    "x_forwarded_for": {
      "title": "Insert the x-forwarded-for header",
      "description": "Inserts the original client IP address in an HTTP header and configures the web server receiving the request to log the client IP address instead of the SNAT address.",
      "default": true
    },
    "enable_acceleration": {
      "title": "Web Acceleration or Caching",
      "description": "Web Acceleration or web caching will be enabled depending on the BIG-IP license.",
      "type": "boolean",
      "default": true
    },
    "make_acceleration_profile": {
      "title": "Automatically manage the Web Acceleration profile",
      "type": "boolean",
      "default": true
    },
    "acceleration_profile_name": {
      "title": "Specify the name of an existing BIG-IP web acceleration profile.",
      "enumFromBigip": "ltm/profile/web-acceleration",
      "default": "/Common/webacceleration"
    },
    "enable_compression": {
      "title": "HTTP Compression",
      "type": "boolean",
      "default": true
    },
    "make_compression_profile": {
      "title": "Automatically manage the HTTP Compression profile",
      "type": "boolean",
      "default": true
    },
    "compression_profile_name": {
      "title": "Specify the name of an existing BIG-IP HTTP compression profile.",
      "enumFromBigip": "ltm/profile/http-compression",
      "default": "/Common/httpcompression"
    },
    "enable_multiplex": {
      "title": "Connection Multiplexing",
      "description": "Works with HTTP Keep-Alives to allow the BIG-IP system to minimize the number of server-side TCP connections by making existing connections available for reuse by other clients.",
      "type": "boolean",
      "default": true
    },
    "make_multiplex_profile": {
      "title": "Automatically manage the Multiplex (OneConnect) profile",
      "type": "boolean",
      "default": true
    },
    "multiplex_profile_name": {
      "title": "Specify the name of an existing BIG-IP OneConnect profile",
      "enumFromBigip": "ltm/profile/one-connect",
      "default": "/Common/oneconnect"
    },
    "common_tcp_profile": {
      "title": "Use the same TCP profile for ingress and egress traffic.",
      "type": "boolean",
      "default": false
    },
    "make_tcp_profile": {
      "title": "Automatically manage the TCP profile.",
      "type": "boolean",
      "default": true
    },
    "tcp_topology": {
      "title": "Specify the type of network that connects both clients and servers to the BIG-IP system.",
      "$ref": "#/definitions/topology",
      "default": "wan"
    },
    "tcp_profile_name": {
      "title": "Specify the name of an existing BIG-IP TCP profile.",
      "type": "string",
      "enumFromBigip": "ltm/profile/tcp",
      "default": "/Common/f5-tcp-progressive"
    },
    "make_tcp_ingress_profile": {
      "title": "Automatically manage the ingress TCP profile.",
      "type": "boolean",
      "default": true
    },
    "tcp_ingress_topology": {
      "title": "Specify the type of network that connects clients to the BIG-IP system.",
      "$ref": "#/definitions/topology",
      "default": "wan"
    },
    "tcp_ingress_profile_name": {
      "title": "Specify the name of an existing BIG-IP TCP profile for client-side context.",
      "type": "string",
      "enumFromBigip": "ltm/profile/tcp",
      "default": "/Common/f5-tcp-progressive"
    },
    "make_tcp_egress_profile": {
      "title": "Automatically manage the egress TCP profile.",
      "type": "boolean",
      "default": true
    },
    "tcp_egress_topology": {
      "title": "Specify the type of network that connects servers to the BIG-IP system.",
      "$ref": "#/definitions/topology",
      "default": "lan"
    },
    "tcp_egress_profile_name": {
      "title": "Specify the name of an existing BIG-IP TCP profile for server-side context.",
      "type": "string",
      "enumFromBigip": "ltm/profile/tcp",
      "default": "/Common/f5-tcp-progressive"
    },
    "irule_names": {
      "title": "Specify the name of one or more iRules to attach to the virtual server.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enumFromBigip": "ltm/rule"
      },
      "default": []
    }
  }
}