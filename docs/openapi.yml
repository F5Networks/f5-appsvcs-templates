openapi: "3.0.0"
x-errors:
    '500': &serverError
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    default: &defaultResponse
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
info:
  version: 1.5.0-rc.4
  title: F5 Application Services Templates API
  license:
    name: Apache 2.0
  description: |
    # F5 Application Services Templates (FAST)

    This is the documentation for the FAST templating extension. This document
    catalogs the API endpoints exposed by the extension. Note that the path for
    all endpoints must be preceded by /mgmt/shared/fast.

    ## Application Management

    These are endpoints related to managing the lifecycle of your applications.
    These endpoints help you create, edit, and query the applications managed by
    FAST.

    ## Task Tracking

    When an application is created, it may not happen instantly. A task is run to
    deploy the AS3 declaration. These endpoints are for retrieving information
    about currently running and previously run tasks. These endpoints will report
    the success or failure of a particular deployment action, such as creating
    or editing an application.

    ## Package Management

    This is the API for loading and unloading new template sets into the system.

    ## Template Management

    This is the API for Querying templates that are loaded into the system.

    ## FAST Extension

    These endpoints are related to management of the FAST Extension itself,
    for getting debug information or software version information.
servers:
 - url: http://localhost:8100/mgmt/shared/fast
tags:
 - name: Application Management
 - name: Task Tracking
 - name: Template Management
 - name: FAST Extension
paths:
  /applications:
    get:
      tags:
        - Application Management
      summary: Fetch List of FAST Applications
      description: |
        Responds with a list of applications that are currently deployed in the system.
      operationId: getAllApplications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
        '500': *serverError
        default: *defaultResponse
    post:
      summary: Create one or more applications from templates
      description: |
        This is the main method to deploy a templated application. The parameters posted will be used
        to render a template, and that template will get posted to AS3.

        The call to AS3 may be async, so this endpoint must also be async. A task will be returned upon
        successful parameter submission that can track the progress of the deployment.
      operationId: createApplication
      tags:
        - Application Management
      requestBody:
        description: |
          A task definition, including the name of the template to run and the parameters needed
          to render and post the output.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/ApplicationDefinition"
                - $ref: "#/components/schemas/ApplicationDefinitionList"
      responses:
        '202':
          description: |
            Template Job Submitted Successfully, check the provided task id to get the status of
            the deployment
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: task ID, can be used to query task state
                    name:
                      description: name of the new application
                      type: string
                    parameters:
                      description: parameters used to create the new application
                      type: object
        '400':
          description: AS3 errors (e.g., invalid schema) are forwarded as 400-level errors. See AS3 documentation for details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
    delete:
      tags:
        - Application Management
      summary: Delete all FAST managed applications
      responses:
        '200':
          description: OK
        '500': *serverError
        default: *defaultResponse
  /applications/{tenantName}/{appName}:
    parameters:
      - name: appName
        in: path
        required: true
        description: The name of the app to retrieve
        schema:
          type: string
      - name: tenantName
        in: path
        required: true
        description: The tenant the app belongs to
        schema:
          type: string
    get:
      summary: Fetch an individual application
      description: |
        Fetches the AS3 application class for the given FAST application
      operationId: getApplication
      tags:
        - Application Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        '404':
          description: Application or Tenant was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
    patch:
      summary: Update application parameters
      description: |
        Update an existing, deployed FAST application with the supplied parameters.
        Existing parameter values from the deployed application will be used as defaults for any missing parameter values.
      tags:
        - Application Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  description: parameters used to update the application
                  type: object
              required:
                - parameters
      responses:
        '202':
          description: |
            Template Job Submitted Successfully, check the provided task id to get the status of
            the deployment
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: task ID, can be used to query task state
                    name:
                      description: name of the updated application
                      type: string
                    parameters:
                      description: parameters used to update the application
                      type: object
        '400':
          description: AS3 errors (e.g., invalid schema) are forwarded as 400-level errors. See AS3 documentation for details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
    delete:
      tags:
        - Application Management
      summary: Delete an individual application
      responses:
        '200':
          description: OK
        '500': *serverError
        default: *defaultResponse
  /templates:
    get:
      summary: List all templates
      operationId: listAllTemplates
      tags:
        - Template Management
      responses:
        '200':
          description: An array of template names
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateList"
        '500': *serverError
        default: *defaultResponse
  /templates/{setName}/{templateName}:
    get:
      summary: Get the specified template
      operationId: getTemplate
      tags:
        - Template Management
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the template to retrieve
          schema:
            type: string
        - name: setName
          in: path
          required: true
          description: The name of template set the template belongs to
          schema:
            type: string
      responses:
        '200':
          description: A template object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        '404':
          description: Set or template was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
  /tasks:
    get:
      summary: List all running and completed tasks
      operationId: listAllTasks
      tags:
        - Task Tracking
      responses:
        '200':
          description: An array of tasks and their status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
        '500': *serverError
        default: *defaultResponse
  /tasks/{taskId}:
    get:
      summary: Get information about a specific task
      description: |
        Get detailed information about a specific task. Tasks are tracked on a best effort basis,
        an interupption in service to the iControl LX platform may result in lost results.
      operationId: getTask
      tags:
        - Task Tracking
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the task to retrieve
          schema:
            type: string
      responses:
        '200':
          description: An array of tasks and their status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
        '404':
          description: The task ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
  /templatesets:
    get:
      summary: Info about installed template sets
      operationId: listAllTemplateSets
      tags:
        - Template Management
      responses:
        '200':
          description: A list of installed template sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TemplateSet"
        '500': *serverError
        default: *defaultResponse
    post:
      summary: Install a new template set
      description: |
        Installs a previously uploaded template set zip (uploaded via the iControl file upload API)
      operationId: uploadTemplates
      tags:
        - Template Management
      requestBody:
        description: The name of a zip file (excluding the .zip extension)
        required: true
        content:
          application/json:
            schema:
              required:
                - name
              properties:
                name:
                  title: Template set name
                  description: The name of the template set to install (excluding the .zip extension)
                  type: string
          multipart/form-data:
            schema:
              description: a zip file containing template schema or mustache files
      responses:
        '200':
          description: The template set installed successfully
        '400':
          description: The supplied template set name is invalid or missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: The supplied template name was not found in /var/config/rest/downloads
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
    delete:
      tags:
        - Template Management
      summary: Delete all installed template sets
      responses:
        '200':
          description: OK
        '500': *serverError
        default: *defaultResponse
  /templatesets/{setName}:
    parameters:
      - name: setName
        in: path
        required: true
        description: The name of the template set
        schema:
          type: string
    get:
      tags:
        - Template Management
      summary: Get information of template set with {setName}
      responses:
        '200':
          description: A template set object
          content:
            application/json:
                schema:
                    $ref: "#/components/schemas/TemplateSet"
        '500': *serverError
        default: *defaultResponse
    delete:
      summary: Removes an installed template set
      description:
        DELETE /templatesets/{setName} will remove an installed template set specified by its name.
      operationId: getTemplateSet
      tags:
        - Template Management
      responses:
        '200':
          description: Template set removed successfully
        '404':
          description: The set name was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500': *serverError
        default: *defaultResponse
  /info:
    get:
      summary: Information about the FAST Extension
      description: |
        This endpoint returns data pertaining to the version of FAST currently in use, as well as
        loaded template sets and other information useful for debug. This endpoint is recommended for
        use when verifying that FAST is installed and ready to use.
      operationId: getInfo
      tags:
       - FAST Extension
      responses:
        '200':
          description: Information about the extension was gathered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Info"
        '500': *serverError
        default: *defaultResponse
components:
  schemas:
    ApplicationDefinition:
      type: object
      required:
        - name
        - parameters
      properties:
        name:
          description: must be valid template in the system
          type: string
        parameters:
          description: object must conform to specified template's schema
          type: object
    ApplicationDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationDefinition"
    Application:
      type: object
      required:
        - template
        - parameters
        - lastModified
        - tenant
        - name
      properties:
        template:
          description: must be valid template in the system
          type: string
        parameters:
          description: object must conform to specified template's schema
          type: object
        lastModified:
          description: timestamp of when the application was last modified
        tenant:
          description: the tenant the application belongs to
        name:
          description: the name of the application
        setHash:
          description: the hash of the template set used to deploy this application
    ApplicationList:
      type: array
      items:
        $ref: "#/components/schemas/Application"
    Task:
      type: object
      required:
        - id
        - name
        - parameters
        - code
        - message
        - tenant
        - application
      properties:
        id:
          description: The taskID of this task
          type: string
        name:
          description: must be valid template in the system
          type: string
        parameters:
          description: object must conform to specified template's schema
          type: object
        code:
          description: current status code of the task
          type: string
        message:
          description: any messages (such as "success" or "in progress") for the task
          type: string
        tenant:
          description: tenant associated with the task
          type: string
        application:
          description: application associated with the task
          type: string
    TaskList:
      type: array
      items:
        $ref: "#/components/schemas/Task"
    TemplateSchema:
      description: A template specification
      properties:
        template:
          type: string
          format: mustache
        anyOf:
          type: array
          items:
            $ref: "#/components/schemas/TemplateSchema"
        allOf:
          type: array
          items:
            $ref: "#/components/schemas/TemplateSchema"
        oneOf:
          type: array
          items:
            $ref: "#/components/schemas/TemplateSchema"
        properties:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TemplateSchema"
    Template:
      type: object
      properties:
        templateText:
          $ref: "#/components/schemas/TemplateSchema"
        definitions:
          $ref: "#/components/schemas/TemplateSchema"
    TemplateList:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
      example:
        - name: example/httpTemplate
        - name: example/httpsTemplate
    TemplateSet:
      type: object
      properties:
        name:
          type: string
          description: Name of the template set
        hash:
          type: string
          description: A sha256 hash of the template hashes
        templates:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: name of the template
              hash:
                type: string
                description: sha256 of the template source text
        updateAvailable:
          type: boolean
          description: template set has a different version available on disk
        enabled:
          type: boolean
          description: template set is installed and ready to use
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Info:
      type: object
      properties:
        version:
          type: string
          description: the version string for FAST
        as3Info:
          type: object
          description: data from AS3's /info endpoint
        installedTemplates:
          type: array
          description: list of TemplateSets
          items:
            $ref: "#/components/schemas/TemplateSet"
